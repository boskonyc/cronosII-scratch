dnl #######################################################
dnl   Version Information
dnl #######################################################

C2_PLUGIN_VERSION_MAJOR=0
C2_PLUGIN_VERSION_MINOR=2
C2_PLUGIN_VERSION_MICRO=3

dnl ## STABLE is 1 when the release is stable or 0 when its not ##
STABLE=0

dnl #######################################################
dnl   Welcome
dnl #######################################################
define([AC_INIT_BINSH],
[[#! /bin/sh
echo
echo Welcome to Cronos II configure script.
echo Check http://cronosII.sourceforge.net for the latest
echo version of this software.
echo
echo ============================= Configuring =============================
]])

dnl #######################################################
dnl   Initialization
dnl #######################################################

AC_INIT(src)
AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(cronosII-scratch, 0.0.3)

dnl #######################################################
dnl   Command, paths and libraries checks
dnl #######################################################

AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)
AC_ISC_POSIX

dnl ## Check for GLib ##
AM_PATH_GLIB([1.2.0], [], [
AC_MSG_ERROR([
Cronos II requires GLib to be built.])], gthread)

GNOME_INIT

AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_STRUCT_TM
AC_FUNC_STRFTIME
AC_CHECK_LIB(pthread, pthread_join)
AC_CHECK_FUNCS(getcwd gethostname getwd mkdir putenv socket strdup strstr setsockopt)

GNOME_X_CHECKS

dnl ## Check for Gnome 1.0 or better ##

AC_MSG_CHECKING([for gnome-libs version >= 1.0.0])
vers=`gnome-config --version gnome-libs | sed 's/^gnome-libs //'`
case $vers
	in
		0.*)
			AC_MSG_RESULT([no])
			AC_MSG_ERROR(
[Cronos II requires gnome-libs 1.0 or better.
You might want to download it from
http://www.gnome.org/.
])
			;;
		*) 
			AC_MSG_RESULT([yes])
			;;
esac

dnl ## Check for Gnome-Print ##
AM_PATH_GNOME_PRINT([0.20.0], [
	AC_DEFINE(USE_GNOME_PRINT)
])

dnl ## Check for libglade ##
AM_PATH_LIBGLADE( , , gnome)

dnl #######################################################
dnl   i18n
dnl #######################################################

ALL_LINGUAS="br de es fr it"
AM_GNU_GETTEXT

dnl #######################################################
dnl   Prefix
dnl #######################################################

if test "$prefix" = "NONE"; then
	AC_PATH_PROG(cronosIIpath, cronosII-config)
	AC_MSG_CHECKING(cronosII-config for a prior installation)
	if test "_$cronosIIpath" = _; then
		AC_MSG_RESULT(no prior installation found)
		AC_MSG_CHECKING(glib-config for a prefix)
		prefix=`glib-config --prefix`
		AC_MSG_RESULT($prefix)
	else
		prefix=`cronosII-config --prefix`
		AC_MSG_RESULT($prefix)
	fi
fi

AC_ARG_ENABLE([], [], [], [])
AC_ARG_ENABLE([], [], [], [])

dnl #######################################################
dnl   Spool dir
dnl #######################################################

AC_MSG_CHECKING(for a valid spool directory in /var/spool/mail)
if test -d "/var/spool/mail"; then
	AC_MSG_RESULT(ok)
	spool=/var/spool/mail
fi

if test "$spool" = "no"; then
	AC_MSG_CHECKING(for a valid spool directory in /var/spool)
	if test -d "/var/spool"; then
		AC_MSG_RESULT(ok)
		spool=/var/spool
	fi
fi

if test "$spool" = "no"; then
	AC_MSG_CHECKING(for a valid spool directory in /var)
	if test -d "/var"; then
		AC_MSG_RESULT(ok)
		spool=/var
	fi
fi

if test "$spool" = "no"; then
	AC_MSG_CHECKING(for a valid spool directory in /)
	if test -d "/"; then
		AC_MSG_RESULT(ok)
		spool=/
	fi
fi

AC_DEFINE_UNQUOTED(USE_SPOOL_DIR, "$spool")

dnl #######################################################
dnl   X-Mailer
dnl #######################################################

AC_ARG_ENABLE([anonymizer],
[  --enable-anonymizer       Don't send system information in messages. [default=no]],
[ anonymizer=$enableval ], [ anonymizer=no ])

if test "$anonymizer" = "no"; then
	gnomeversion=`gnome-config --version gnome-libs | sed 's/^gnome-libs //'`
	os=`uname -s`
	osrelease=`uname -r`
	machinetype=`uname -m`
	xmailer="Cronos II $VERSION (Gnome $gnomeversion; $os $osrelease; $machinetype)"
else
	xmailer="Cronos II"
fi

AC_DEFINE_UNQUOTED(USE_XMAILER, "$xmailer")

dnl #######################################################
dnl   Debug
dnl #######################################################

AC_ARG_ENABLE([debug],
[  --disable-debug           Disable the debugging routines. [default=yes]],
[ debug=$enableval ], [ debug=yes ])

if test "$debug" = "yes"; then
	AC_DEFINE(USE_DEBUG)
	debug=yes
else
	debug=no
fi

dnl #######################################################
dnl   Gnome-Download
dnl #######################################################

AC_PATH_PROG(gnomedownload, gnome-download)
if test "_$gnomedownload" = _; then
	AC_MSG_CHECKING(gnome-download path)
	AC_MSG_ERROR([the gnome-download script couldn't be found.])
fi
AC_DEFINE_UNQUOTED(GNOME_DOWNLOAD_PATH, "$gnomedownload")

dnl #######################################################
dnl   GtkXmHtml
dnl #######################################################

AC_ARG_ENABLE([gtkxmhtml],
[  --disable-gtkxmhtml        Disable the use of the GtkXmHTML widget for showing messages [default=no]],
[ gtkxmhtml=$enableval ], [ gtkxmhtml=yes ])

AC_MSG_CHECKING(for GtkXmHTML)
if test "$gtkxmhtml" = "yes"; then
	AC_CHECK_HEADER([gtk-xmhtml/gtk-xmhtml.h], [
		html="with GtkXmHTML"
		FEATURES="$FEATURES 'HTML (GtkXmHTML)'"
		AC_DEFINE(USE_GTKXMHTML)
		HTMLLIBS="-lgtkxmhtml"
	], [
		html="no"
	])
else
	AC_MSG_RESULT(no)
fi

dnl #######################################################
dnl   GtkHtml
dnl #######################################################

AC_ARG_ENABLE([gtkhtml],
[  --enable-gtkhtml          Use the GtkHtml widget for showing messages [default=no]],
[ gtkhtml=$enableval ], [ gtkhtml=yes ])

AC_MSG_CHECKING(for GtkHTML)
if test "$gtkhtml" = "yes"; then
	if gnome-config --libs gtkhtml > /dev/null 2>&1; then
		vers=`gnome-config --modversion gtkhtml | sed 's/^gtkhtml-//'`
		html="with GtkHTML $vers"
		FEATURES="$FEATURES 'HTML (GtkHTML)'"
		AC_DEFINE(USE_GTKHTML)
		AC_MSG_RESULT(yes)
		HTMLLIBS="-lgtkhtml"
	else
		html="no"
		AC_MSG_RESULT(no)
	fi
else
	AC_MSG_RESULT(no)
fi

dnl #######################################################
dnl   Test Suite
dnl #######################################################

AC_ARG_ENABLE([test_suite],
[  --enable-test-suite       Enable the test suite. [default=no]],
[ test_suite=$enableval ], [ test_suite=no ])
AM_CONDITIONAL(USE_TEST_SUITE, test "x$test_suite" = "xyes")

dnl #######################################################
dnl   UI Text Editor
dnl #######################################################

AC_ARG_ENABLE([ui_text_editor],
[  --enable-ui-text-editor   Enable UI Text Editor. (Developers only)],
[ ui_text_editor=$enableval ], [ ui_text_editor=no ])
AC_DEFINE(USE_UI_TEXT_EDITOR)
AM_CONDITIONAL(USE_UI_TEXT_EDITOR, test "x$ui_text_editor" = "xyes")

AC_DEFINE_UNQUOTED(C2_PLUGIN_VERSION_MAJOR, $C2_PLUGIN_VERSION_MAJOR)
AC_DEFINE_UNQUOTED(C2_PLUGIN_VERSION_MINOR, $C2_PLUGIN_VERSION_MINOR)
AC_DEFINE_UNQUOTED(C2_PLUGIN_VERSION_MICRO, $C2_PLUGIN_VERSION_MICRO)
AC_SUBST(HTMLLIBS)
AC_SUBST(LIBS)
AC_SUBST(CFLAGS)
AC_SUBST(FEATURES)
AC_SUBST(LIBOBJS)
AC_SUBST(LIBGLADE_CFLAGS)
AC_SUBST(LIBGLADE_LIBS)

AC_OUTPUT([
doc/Makefile
doc/C/Makefile
images/Makefile
intl/Makefile
libcronosII/Makefile
xml/Makefile
macros/Makefile
man/Makefile
test-suite/Makefile
pixmaps/Makefile
plugins/Makefile
po/Makefile.in
src/Makefile
Makefile
about.html
cronosII.spec
cronosII-config
])

echo
echo  ============================= Result =============================
echo  Installing in prefix.............: $prefix
echo  Building test suite..............: $test_suite
echo  Building with debugging routines.: $debug
echo
echo  Building with HTML support.......: $html
echo
echo  Run \'make\' to start compiling this software.
